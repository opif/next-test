name: Verify Pull Request
on: [pull_request]

jobs:
  lighthouse-check:
    runs-on: ubuntu-latest
    env:
      LIGHTHOUSE_ARTIFACTS_PATH: /tmp/lighthouse-artifacts
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Check if project lints
        run: npm run lint
      - name: Check if project builds
        run: npm run build
      - name: Check if project passess tests
        run: npm run test
      - name: Deploy Preview to Vercel
        uses: amondnet/vercel-action@v20
        id: deploy-preview
        with:
          github-comment: false
          working-directory: ./
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Post a friggin comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš€ Preview has been built and is available here: ${{ steps.deploy-preview.outputs.preview-url }} ðŸš€
      - run: mkdir -p "$LIGHTHOUSE_ARTIFACTS_PATH"
      - name: Run Lighthouse
        id: lighthouse-report
        uses: foo-software/lighthouse-check-action@master
        with:
          outputDirectory: ${{ env.LIGHTHOUSE_ARTIFACTS_PATH }}
          device: all
          urls: ${{ steps.deploy-preview.outputs.preview-url }}
      - name: Format Scores for Comment
        id: format-lighthouse-scores
        uses: actions/github-script@v6
        with:
          script: |
            const lighthouseResults = ${{ steps.lighthouse-report.outputs.lighthouseCheckResults }};
            const badgeColors = [[90, 'brightgreen'], [80, 'yellow'], [50, 'orange']];
            const scoreLabels = {
              accessibility: 'Accessibility',
              bestPractices: 'Best Practices',
              performance: 'Performance',
              progressiveWebApp: 'PWA',
              seo: 'SEO',
            };

            const selectBadgeColor = (score) => badgeColors.find(([threshold, color]) => score >= threshold)?.[1] || 'red';
            const createBadge = (label, score) => `![](https://img.shields.io/badge/${ label.replace(' ', '_') }-${ score }-${ selectBadgeColor(score) }?style=flat-square)`;
            const formatScore = ([name, score]) => createBadge(scoreLabels[name], score);
            const formatDeviceScores = (([deviceType, scores]) => `${ deviceType }: ${ scores.entries().map(formatScore).join(' ') }`);
            const formatResults = ([url, deviceScores]) => `*Lighthouse results for ${ url }:*
              ${ deviceScores.entries().map(formatDeviceScores).join('\n') }
            `;

            const groupedScores = lighthouseResults.data.reduce((acc, result) => {
              const deviceType = result.emulatedFormFactor;
              const urlScores = acc[result.url] || {};
              acc[result.url] = {
                ...urlScores,
                [deviceType]: result.scores,
              };

              return acc;
            }, {});


            return groupedScores.entries().map(formatResults).join('\n\n');
          result-encoding: string
      - name: Post a friggin comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Testing if ${{ github.sha }} for pr-${{ github.event.number }} worked well.
            The preview is available here: ${{ steps.deploy-preview.outputs.preview-url }};

            Lighthouse Results: ${{ steps.lighthouse-report.outputs.lighthouseCheckResults }}
      - name: "Upload Lighthouse Artifacts"
        id: upload-lighthouse
        uses: actions/upload-artifact@v3
        with:
          name: Lighthouse reports
          path: ${{ env.LIGHTHOUSE_ARTIFACTS_PATH }}
          retention-days: 5
